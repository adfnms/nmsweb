<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="com.bluecapsystem.nms.system">

	<resultMap id="MenuTbl" class="com.bluecapsystem.nms.dto.MenuTbl">
		<result property="menuId" column="menu_id" />
		<result property="menuLev" column="menu_lev" />
		<result property="menuOrd" column="menu_ord" />
		<result property="upperMenuId" column="upper_menu_id" />
		<result property="menuNm" column="menu_nm" />
		<result property="url" column="url" />
		<result property="menuDesc" column="menu_desc" />
		<result property="openYn" column="open_yn" />
		<result property="regrId" column="regrid" />
		<result property="regDt" column="reg_dt" />
		<result property="modrId" column="modrid" />
		<result property="modDt" column="mod_dt" />
		<result property="useYn" column="use_yn" />
	</resultMap>

	<select id="selectMenu" resultMap="MenuTbl" parameterClass="java.util.Map">
		select 
			MENU_ID, MENU_LEV, MENU_ORD, UPPER_MENU_ID, MENU_NM, URL,
			MENU_DESC, OPEN_YN, REGRID, REG_DT, MODRID, MOD_DT, USE_YN
		from 
			MENU_TBL
		order by 
			MENU_LEV, UPPER_MENU_ID, MENU_ORD
	</select>

	<select id="getMenuGroupId" parameterClass="java.util.Map" resultClass="com.bluecapsystem.nms.dto.MenuGroupTbl">
		select
			GROUP_NM AS groupNm, 
			MENU_ID AS menuId,
			REGRID AS regrId,
			REG_DT AS regDt
		from 
			MENU_GROUP_TBL 
		where  
			GROUP_NM = #groupNm#
		
	</select>
	
	<select id="showMenu" parameterClass="java.util.Map" resultClass="com.bluecapsystem.nms.dto.UserTbl">

		SELECT 
			MENU_ID AS menuId,
			UT.USER_ID AS userId,
			UT.USER_NM AS userNm,
			UT.GROUP_NM AS groupNm
		FROM 
			USER_TBL UT
		INNER 
			JOIN MENU_GROUP_TBL MGT ON MGT.GROUP_NM = UT.GROUP_NM
		WHERE 
			USER_ID = #userId#
	</select>
	
	<insert id="regGroupTbl" parameterClass="com.bluecapsystem.nms.dto.GroupTbl">

		INSERT INTO USER_GROUP_TBL (

		GROUP_NM, GROUP_COMMENTS, REG_DT, REGRID, MODRID, MOD_DT, USE_YN

		) VALUES (

		#groupNm#, #groupComments#, date(now()), #regrId#, #modrId#, date(now()),
		#useYn#
		);

	</insert>

	<delete id="deleteGroupTbl" parameterClass="com.bluecapsystem.nms.dto.GroupTbl">
		DELETE FROM USER_GROUP_TBL
		WHERE GROUP_NM = #groupNm#;
	</delete>


	<insert id="regMenuAuth" parameterClass="com.bluecapsystem.nms.dto.MenuGroupTbl">

		INSERT INTO MENU_GROUP_TBL (
		GROUP_NM,MENU_ID,REGRID,REG_DT

		) VALUES (

		#groupNm#,#menuId#,#regrId#,date(now())
		)
	</insert>

	<delete id="delMenuAuth" parameterClass="java.util.Map">

		DELETE FROM MENU_GROUP_TBL
		WHERE GROUP_NM = #groupNm#

	</delete>
	
	<select id="searchNodeList" parameterClass="java.util.Map" resultClass="com.bluecapsystem.nms.dto.NodeTbl">

		SELECT 
			nodeid, 
			nodelabel,
			nodecreatetime 
		FROM node
		
		<dynamic prepend="WHERE">
			<isNotEmpty prepend="AND" property="nodeLabel">
				nodelabel like '%' ||#nodeLabel# || '%'
			</isNotEmpty>
			 <isNotEmpty prepend="AND" property="nodeId">
			 	nodeid = #nodeId#
			 </isNotEmpty>
			<isNotEmpty prepend="AND" property="serviceId">
				nodeid in (SELECT nodeid FROM ifservices WHERE status != 'D' AND serviceid = #serviceId# GROUP BY nodeid)
			</isNotEmpty>
			<isNotEmpty prepend="AND" property="ipAddress">
				nodeid in (SELECT nodeid  FROM ipinterface WHERE iplike(ipaddr,#ipAddress#) AND ismanaged = 'M')
			</isNotEmpty>
		</dynamic> 
		order by nodeid asc
	</select>
	
	<update id="nodeIdUpdate" parameterClass="java.util.Map">
		UPDATE node set nodeid = #oldNodeid# where nodeid = #nodeid#
	</update>
	
	<update id="interfaceNodeIdUpdate" parameterClass="java.util.Map">
		UPDATE ipinterface set nodeid = #oldNodeid# where nodeid = #nodeid#
	</update>
	
	<update id="serviceNodeIdUpdate" parameterClass="java.util.Map">
		UPDATE ifservices set nodeid = #oldNodeid# where nodeid = #nodeid#
	</update>
	
	<update id="nodeRequisitionsUpdate" parameterClass="kr.co.adflow.nms.web.vo.requisition.RequisitionsNodes">
		UPDATE node set 
			foreignsource = #building#,
  			foreignid = #foreignid# 
  		where nodeid = #nodeid#
	</update>
	
</sqlMap>
	
